%# -*- mason -*-
%# Copyright (c) 2003 by Jeff Weisberg
%# Author: Jeff Weisberg <jaw @ tcp4me.com>
%# Date: 2003-Oct-30 16:02 (EST)
%# Function: process allocation request and redirect
%#
%# $Id: alloc-block-1,v 1.8 2010/01/16 03:22:06 jaw Exp $


<%attr>
    title   => 'Allocate Block'
    acl     => 'staff'
</%attr>
%################################################################
<%args>

</%args>
%################################################################
<%init>
    my $s  = Talmud::sess();
    my $db = Talmud::db();
    my $block;
	
    my $form = $m->comp('alloc-block:FORM', post => 1);
	
    $m->comp('/sys/form:fixup', form => $form, args => \%ARGS);
    my $err = $m->comp('/sys/form:validate', form => $form, args => \%ARGS);
    if( $err ){
	return $m->comp( 'alloc-block', err => $err, dfl => \%ARGS );
    }

    eval {
	my $data = $m->comp('/sys/form:sql_from_form', form => $form, args => \%ARGS, sqlcol => 'sql');

	$db->start();
	$db->do('lock mi_ipdb_block');
	
	$block = IPDB::find_and_alloc(
		db	=> $db,
		size	=> $ARGS{size},
		pool	=> $ARGS{pool},
	);

	$data->{status}   = 'allocated';
		
	$db->update_hash('mi_ipdb_block', $data, [block_id => $block] );
	Talmud::touch_object($db, $block);
		
	IPDB::SWIP::alloc( $db, $block ) unless $ARGS{swipp} eq 'no';

	$db->commit();
    };
    if( $@ ){
	my $emsg = $@;
	$emsg = $db->error_sanitize( $emsg );
	$db->rollback();
	$m->comp('/sys/error.mas', msg => $emsg);
	return $m->comp( 'alloc-block', dfl => \%ARGS );
    }
	
    $m->comp('/sys/redirect.mas', where => "/ipdb/view-block?oid=$block" );

</%init>

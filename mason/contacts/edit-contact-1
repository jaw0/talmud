%# -*- mason -*-
%# Copyright (c) 2003 by Jeff Weisberg
%# Author: Jeff Weisberg <jaw @ tcp4me.com>
%# Date: 2003-Oct-08 22:56 (EDT)
%# Function: process edit contact form and redirect
%#
%# $Id: edit-contact-1,v 1.8 2010/01/16 03:21:54 jaw Exp $

<%attr>
    title   => 'Edit Contact'
    acl	    => 'user :w'
</%attr>
%################################################################
<%args>
    $oid
    $name
    $email
    $catg
    $pubp
    $newf  => undef
    $newv  => undef
    $newa  => undef
</%args>
%################################################################
<%init>
    my $s  = Talmud::sess();
    my $db = Talmud::db();
    
    eval {
	$db->start();

        $db->update_hash('mi_party', {
	    email     => ($email || undef),
	}, [ "party_id" => $oid ] );

        $db->update_hash('mi_person', {
	    realname => ($name || undef),
	    category => $catg,
	    public_p => ($pubp eq 'public' ? \'true' : \'false' ),
	}, [ "person_id" => $oid ] );

	if( $newf && $newv ){
	  $db->insert_hash('mi_contact_data', {
	      field	   => ($newf || undef),
	      value	   => ($newv || undef),
	      availability => ($newa || undef),

	      contact_id   => $oid,
	      data_id      => $db->unique(),
	  } );
	}

	foreach my $f (keys %ARGS) {
	    next unless $f =~ /^cv_/;
	    my( $ci ) = $f =~ /cv_(\d+)/;
	    my $a = $f;
	    $a =~ s/cv/ca/;
	    
	    $db->update_hash('mi_contact_data', {
		value		=> ($ARGS{$f} || undef),
		availability    => ($ARGS{$a} || undef),
	    }, [ contact_id => $oid, data_id => $ci ] );
	}
    
	Talmud::touch_object($db, $oid);

	$db->commit();
    };
    if( $@ ){
	 my $emsg = $@;
	 $emsg = $db->error_sanitize( $emsg );
	 $db->rollback();
	 $m->comp('/sys/error.mas', msg => $emsg);
	 return $m->comp( 'edit-contact', oid => $oid, dfl => \%ARGS );
    }

    $m->comp('/sys/redirect.mas', where => "/contacts/view-contact?oid=$oid" );

</%init>

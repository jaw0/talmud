%# -*- mason -*-
%# Copyright (c) 2003 by Jeff Weisberg
%# Author: Jeff Weisberg <jaw @ tcp4me.com>
%# Date: 2003-Oct-09 09:39 (EDT)
%# Function: list eqmt
%#
%# $Id: list-eqmt,v 1.14 2010/08/29 17:21:25 jaw Exp $

%# RSN - better list, more sorting options

<script src="/sys/sortable.js"></script>
%################################################################
<DIV CLASS=CONTEXT>Equipment &rarr; List</DIV>
<P>

<FORM>
<TABLE>
<TR><TD>Facility: <& /sys/field, field => { name => 'fac', type => 'hash', values => [all => 'all', @fac] } &></TD>
<TD><& /sys/field, field => { name => 'submit', type => 'submit', submit => 'List' } &>
</TD></TR>
</TABLE>
</FORM>

<TABLE class="eqmt-list sortable" id="eqmttable" cellspacing=0>
<thead><tr>
    <td>Eqmt</td><td>Status</td><td>Prio</td>
    <td>Facility</td><td>Rack</td><td>Posn</td><td>Type</td>
    <td>Manuf</td><td>Model</td><td>OS</td>
</tr></thead>
<tbody>
% while( my $r = $st->fetchrow_hashref() ){
%   my $pos = sprintf "%-10s %04d %04d", $r->{code}, $r->{rack_no}, $r->{rack_pos};
<TR>
    <TD><A HREF="view-eqmt?oid=<% $r->{eqmt_id} %>"><% $r->{fqdn} %></A></TD>
    <td><% $r->{status_id} %></td>
    <td sortby="<% $r->{import_sort} %>"><% $r->{import_id} %></td>
    <td sortby="<% $pos %>"><% $r->{code} %></td>
    <td sortby="<% $pos %>"><% $r->{rack_no} %></td>
    <td sortby="<% $pos %>"><% $r->{rack_pos} %></td>
    <td><% $r->{hw_type_id} %></td>
    <td><% $r->{manuf} %></td>
    <td><% $r->{hw_model} %></td>
    <td><% $r->{os_name} %> <% $r->{os_ver} %></td>

</TR>
% }
</tbody>
</TABLE>
<br><br>

<script>
    window.onload = function(){
        init_table('eqmttable', 0);
    };
</script>

%################################################################
<%attr>
	title	=> 'List Equipment'
	acl	=> 'staff'
</%attr>
%################################################################
<%args>
	$fac	=> 'all'
</%args>
%################################################################
<%init>
	my $db = Talmud::db();
	my $s  = Talmud::sess();
	my $q  = $s->{q};

	my @fac = $db->select_2columns("select fac_id, code from mi_facility order by code");

	my( $wh, @hdr, @wh );

	# build a where clause based on eu selections
	if( $fac && $fac ne 'all' ){
		$wh = "where fac_id = ?"; push @wh, $fac;
	}

        my $stmt = $m->scomp('SELF:SQL') . ' ' . $wh;

	my $st = $db->do($stmt, @wh);

</%init>
%################################################################
<%method SQL>
select eqmt_id, fqdn,
    mi_facility.code, rack_no, rack_pos,
    manuf, hw_model, hw_model, hw_type_id,
    os_name, os_ver,
    import_id, status_id, mi_importance.sort_value as import_sort
  from mi_eqmt
    inner join mi_facility using (fac_id)
    inner join mi_importance on (import_id = mi_importance.name)
</%method>

